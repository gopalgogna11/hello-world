//All Rights Reserved.
//
//*** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ***
// XML Revision      : $Revision: 1.238 $
//
//---------------------------------------------------------------------------------------------------------------
//
//  processor hierarchy
//
//  processor
//
// DESCRIPTION: 32-bit CPU microprocessor core, based on the SPARC-V8 RISC architecture and instruction set
//


module processor
    #( parameter
    local_memory_start_addr = ERROR101: startup failed:
    Script1.groovy: 1: expecting EOF, found '65536' @ line 1, column 51.
    ddr = (start_addr_local ) "/" 65536;loca
    ^
    
    1 error
    input = ($start_addr_local ) / 65536,        //EXAMPLE TO SHOW, HOW TO WRITE PARAMETERES.
    local_memory_addr_bits = ERROR101: startup failed:
    Script1.groovy: 1: expecting EOF, found '65536' @ line 1, column 51.
    ddr = (start_addr_local ) "/" 65536;loca
    ^
    
    1 error
    input = log($range_local +1)
    )
    
    (
    input rst_an,
    input clk,
    input clkn,
    input pclk,
    input presetn,
    input psel,
    input penable,
    input [11:0] paddr,
    input pwrite,
    input [31:0] pwdata,
    output [31:0] prdata,
    input hclk,
    input hresetn,
    input hgrant,
    input hready,
    input [1:0] hresp,
    input [31:0] hrdata,
    output hbusreq,
    output [1:0out] htrans,
    output [31:0] haddr,
    output hwrite,        //
    output [2:0] hsize,
    output [2:0] hburst,
    output [3:0] hprot,
    output [31:0] hwdata,
    input [3:0] irl,
    output intack,
    output [3:0] irqvec,
    input tck,
    input ntrst,
    input tms,
    input tdi,
    output tdo,
    output SimDone
    
    );
    
    
    clock_rtl  AHBClk (
    .CLK(hclk)
    );
    
    reset_rtl  AHBReset (
    .RESETn(hresetn)
    );
    
    AHB_rtl  AHBmaster (
    .HRDATA(hrdata),
    .HGRANTx(hgrant),
    .HADDR(haddr),
    .HTRANS(htrans),
    .HWRITE(hwrite),
    .HSIZE(hsize),
    .HBURST(hburst),
    .HPROT(hprot),
    .HWDATA(hwdata),
    .HBUSREQx(hbusreq),
    .HREADY(hready),
    .HRESP(hresp),
    .HCLK(hclk),
    .HRESETn(hresetn)
    );
    
    APB_rtl  APBslave (
    .PADDR(paddr),
    .PRDATA(prdata),
    .PWRITE(pwrite),
    .PSELx(psel),
    .PENABLE(penable),
    .PCLK(pclk),
    .PRESETn(presetn)
    );
    
    IntProc_rtl  SlaveIntController (
    .IRL(irl),
    .IRQVEC(irqvec),
    .INTack(intack)
    );
    
    jtag_rtl  JTAG (
    .TCK(tck),
    .NTRST(ntrst),
    .TMS(tms),
    .TDI(tdi),
    .TDO(tdo)
    );
    
    
endmodule

